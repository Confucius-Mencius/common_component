
base lib中用c++实现的，尽量换成c实现

@copyright 统一替换

设置cpu亲和力提高性能 [终极优化]


一个连接上的数据很多时，循环接收直至不完整的包，会导致该线程的其它连接饿死，考虑优化。做实验：两个连接，一个连接send大量数据，另一个连接循环send少量数据，sleep一下再send，观察这两个连接的recv情况

writev代替write/send，看libevent有没有类似的发送和接收接口

整理kcachegrind的使用方法

将通过栈上拷贝的std::string等大结构改为用new分配，传递指针。

tcp和http监听要支持域名方式访问，测试一下

ET模式的实验与对比（bufferevent和normal）
libevent水平触发or边缘触发测试：可读时不读完 【搜索mongodb的代码发现是边缘触发的，可以简单写用例验证】
每次不是读完消息，而是只读取一定数量，避免独占导致别人饿死?

set_directory_properties
ADDITIONAL_MAKE_CLEAN_FILES

4，增加回包限速设置：
   //用户可能设置了限速，如果没有限速，那么atmost将返回16384(16K)  
    atmost = _bufferevent_get_write_max(bufev_p);  


最新源码：
ev_ssize_t
bufferevent_get_read_max_(struct bufferevent_private *bev)
{
	return bufferevent_get_rlim_max_(bev, 0);
}

ev_ssize_t
bufferevent_get_write_max_(struct bufferevent_private *bev)
{
	return bufferevent_get_rlim_max_(bev, 1);
}


	/** Rate-limiting information for this bufferevent */
	struct bufferevent_rate_limit *rate_limiting;

限速可以参考nginx limit_rate配置


5,demo server中的远程调用都改为本地127.0.0.1的调用，方便跑用例


等以后有了名字服务,增加一个调试模式配置，调试模式时读配置直连其他server，不通过名字服务获取服务地址。


网络风暴测试，达到一定频率就断掉连接，且一段时间内拒绝该ip的连接。

chdir_to_root测试，看程序运行对不对


在自己的proj中，将py_tools和sh_tools作为submodule，调整目录
[huangguangcheng@luna workspace]$ cd luna/
[huangguangcheng@luna luna]$ ll
total 8
drwxrwxr-x  5 huangguangcheng huangguangcheng  154 Mar  9  2018 clusterweb
drwxrwxr-x  9 huangguangcheng huangguangcheng 4096 Mar 13 17:23 doc
drwxrwxr-x 11 huangguangcheng huangguangcheng  238 Mar  9  2018 py_tools
-rw-rw-r--  1 huangguangcheng huangguangcheng  358 Jul  2  2018 readme.md
drwxrwxr-x  7 huangguangcheng huangguangcheng  191 Mar  9  2018 server_proj
drwxrwxr-x  3 huangguangcheng huangguangcheng   35 Mar  9  2018 sh_tools
[huangguangcheng@luna luna]$ cd server_proj/
[huangguangcheng@luna server_proj]$ ll
total 24
drwxrwxr-x  3 huangguangcheng huangguangcheng 4096 Dec 14 16:09 conf
drwxrwxr-x  3 huangguangcheng huangguangcheng  268 Mar  9  2018 doc
-rw-rw-r--  1 huangguangcheng huangguangcheng  434 Mar  9  2018 proxy_server_conf.csv
drwxrwxr-x 10 huangguangcheng huangguangcheng  164 Mar  9  2018 py_test
-rw-rw-r--  1 huangguangcheng huangguangcheng   13 Mar  9  2018 README.md
drwxrwxr-x  2 huangguangcheng huangguangcheng 4096 Nov 14 19:04 scripts
drwxrwxr-x 11 huangguangcheng huangguangcheng  164 Mar  9  2018 src
-rw-rw-r--  1 huangguangcheng huangguangcheng  652 Mar  9  2018 status_server_conf.csv
-rw-rw-r--  1 huangguangcheng huangguangcheng  695 Mar  9  2018 web_server_conf.csv
[huangguangcheng@luna server_proj]$ 




udp threads先不做；
基于raw tcp threads开发io threads，raw tcp、proto tcp、http-ws threads均基于io threads开发，以后加udp也只是改io threads，udp threads也是基于io threads开发；
完善work threads，将global thread和burden均基于work threads开发；